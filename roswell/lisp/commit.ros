#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(:cl-smtp) :silent t)
  )

(defpackage :ros.script.commit.3728263977
  (:use :cl))
(in-package :ros.script.commit.3728263977)

(defvar *from-address* "a-nano@e-ohtama.jp")
(defvar *to-address* "y-shimizu@e-ohtama.jp")
(defvar *user-name* "a-nano")
(defvar *password* "e4ByhaSk")
(defvar *smtp-address* "203.138.167.28")

(defun time-stamp ()
  (multiple-value-bind (second
			minute
			hour
			date
			month
			year
			day-of-weak
			daylight-p
			time-zone)
      (get-decoded-time)
    (declare (ignore time-zone daylight-p day-of-weak))
    (format nil "~d-~d-~d ~d:~d:~d" year month date hour minute second)))

(defun make-text (str)
  (with-output-to-string (s)
    (format s "~A にSVNをコミットしましたので、お知らせします。~%"  (time-stamp))
    (format s "作業前でしたらローカルリポジトリの更新をお願いします。~%~%")
    (format s "---------修正内容は下記となります----------~%")
    (print str s)))

(defun send! (&optional (str "bug fixed."))
  (cl-smtp:send-email *smtp-address*
		      *from-address*
		      *to-address*
		      (format nil "【~A】SVNコミットのおしらせ" (time-stamp))
		      (make-text str)
		      :authentication `(:login ,*user-name* ,*password*)
		      :ssl :tls))

(defun main (&rest argv)
  (declare (ignorable argv))
  (if argv
      (send! (apply #'concatenate 'string argv))
      (send!))
  (format t "~%Mailing to ~A was successful.~%" *to-address*))
;;; vim: set ft=lisp lisp:
